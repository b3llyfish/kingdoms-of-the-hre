flip_capital_if_culture_missing_in_sub_realm = {
	$CHARACTER$ = {
		if = {
			limit = {
				NOT = {
					any_sub_realm_county = {
						count >= 1
						culture = root.culture
					}
				}
			}
			capital_county = {
				set_county_culture = root.culture
			}
		}
	}
}

# marks the kingdom whose creation triggered the divergence
enhanced_expand_diverged_culture_setup_vars = {
	$CHARACTER$ = {
		add_character_flag = kingdoms_hre_do_enhanced_diverge_conversion
		if = {
			limit = {
				has_primary_title = title:k_upper_saxony
			}
			set_variable = {
				name = kingdoms_hre_enhanced_diverge_kingdom_title
				value = title:k_upper_saxony
			}
		}
		else_if = {
			limit = {
				has_primary_title = title:k_austria
			}
			set_variable = {
				name = kingdoms_hre_enhanced_diverge_kingdom_title
				value = title:k_austria
			}
		}
		else_if = {
			limit = {
				has_primary_title = title:k_lotharingia
			}
			set_variable = {
				name = kingdoms_hre_enhanced_diverge_kingdom_title
				value = title:k_lotharingia
			}
		}
		else_if = {
			limit = {
				has_primary_title = title:k_burgundy
			}
			set_variable = {
				name = kingdoms_hre_enhanced_diverge_kingdom_title
				value = title:k_burgundy
			}
		}
		else_if = {
			limit = {
				has_primary_title = title:k_switzerland
			}
			set_variable = {
				name = kingdoms_hre_enhanced_diverge_kingdom_title
				value = title:k_switzerland
			}
		}
	}
}

# undo the culture conversion done by the base game
undo_diverged_culture_conversion = {
	$CHARACTER$ = {
		culture = {
			save_scope_as = new_culture
			random_parent_culture = {
				# only 1 parent so won't be random
				save_scope_as = old_culture
			}
		}
		top_liege = {
			every_sub_realm_county = {
				limit = {
					culture = scope:new_culture
				}
				set_county_culture = scope:old_culture
			}
		}
	}
}

# stronger culture conversion from county effect
# can only convert counties within your top liege's realm
# can only convert counties within the kingdom defined by var:kingdoms_hre_enhanced_diverge_kingdom_title
enhanced_expand_diverged_culture_from_origin_point = {
	$CHARACTER$ = {
		save_scope_as = character
	}
	every_title_to_title_neighboring_and_across_water_county = {
		limit = {
			holder.top_liege = scope:character.top_liege
			OR = {
				NOT = { exists = scope:character.var:kingdoms_hre_enhanced_diverge_kingdom_title }
				kingdom = scope:character.var:kingdoms_hre_enhanced_diverge_kingdom_title
			}
		}
		
		random = {
			chance = {
				value = enhanced_diverge_conversion_immediate_counties_convert_chance
			}
			set_county_culture = scope:character.culture
			every_title_to_title_neighboring_and_across_water_county = {
				limit = {
					holder.top_liege = scope:character.top_liege
					OR = {
						NOT = { exists = scope:character.var:kingdoms_hre_enhanced_diverge_kingdom_title }
						kingdom = scope:character.var:kingdoms_hre_enhanced_diverge_kingdom_title
					}
				}
				random = {
					chance = {
						value = enhanced_diverge_conversion_secondary_counties_convert_chance
					}
					set_county_culture = scope:character.culture
				}
			}
		}
	}
}

offer_vassal_culture_convert = {
	# setup scopes required for culture_conversion.0001
	$CHARACTER$ = {
		save_scope_as = converter
		culture = {
			save_scope_as = new_culture
			random_parent_culture = {
				# only 1 parent so won't be random
				save_scope_as = old_culture
			}
		}
	}
	
	# Offer every vassal with old culture a chance to convert
	scope:converter = {
		every_vassal = {
			limit = {
				culture = scope:old_culture
			}
			trigger_event = {
				id = culture_conversion.0001
				days = 1
			}
		}
	}
}